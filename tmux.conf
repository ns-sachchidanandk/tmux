# ===== this configuration is specific to Mac OS only ===== #

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'catppuccin/tmux#v2.1.1' # See https://github.com/catppuccin/tmux/tags for additional tags


# ===== general ===== #

set-option -gq default-terminal "xterm-256color"

# Fix color issue inside tmux (makes same as when we are outside tmux)
set-option -sa terminal-overrides ",xterm*:Tc"

set-window-option -gq xterm-keys on

# faster command sequences
set-option -s escape-time 10

# increase repeat timeout
set-option -sg repeat-time 600

set-option -s focus-events on

# Change prefix key from <C-b> to <M-a> GNU-Screen compatible prefix
unbind C-b
set -g prefix M-a
bind M-a send-prefix

# expect UTF-8 (tmux < 2.2)
set-option -gq status-utf8 on
set-window-option -gq utf8 on

# boost history
set-option -gq history-limit 10000

# Enable mouse support
set-option -gq mouse on

# ===== Configure the catppuccin plugin ===== #

set -g @catppuccin_flavor "mocha"
set -ogq @catppuccin_window_text " #{b:pane_current_path}"
set -ogq @catppuccin_window_current_text " #{pane_current_command}"

# Make the status line pretty and add some modules
set -g status-right-length 100
set -g status-left-length 100
set -g status-left ""
set -g status-right "#{E:@catppuccin_status_session}"
set -ag status-right "#{E:@catppuccin_status_uptime}"


# ===== display ===== #

# Update windows title
set-option -gq set-titles-string "#h ❐ #S ● #I #W"

set-option -gq status "on"
set-option -gq status-interval 10     # redraw status line every 10 seconds


# start pane and windows numbering at 1
set-window-option -g pane-base-index 1
set-option -gq base-index 1

# rename window to reflect current program
set-window-option -gq automatic-rename on

# renumber windows when a window is closed
set-option -gq renumber-windows on

# set terminal title
set-option -gq set-titles on

# slightly longer pane indicators display time
set-option -gq display-panes-time 800

# slightly longer status messages display time
set-option -gq display-time 1000

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.2' \; clear-history

# activity
set-option -gq monitor-activity on
set-option -gq visual-activity off


# ===== navigation ===== #
# create session
# bind C-c new-session

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# session navigation
bind BTab switch-client -l  # move to last session

# split current window horizontally
bind - split-window -v

# split current window vertically
bind | split-window -h

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# window navigation
unbind n
unbind p
bind -r C-h previous-window # select previous window
bind -r C-l next-window     # select next window
bind Tab last-window        # move to last active window


# ===== copy mode ===== #

# set vi-mode
set -g status-keys vi
set -g mode-keys vi
set-window-option -g mode-keys vi

bind Enter copy-mode # enter copy mode

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-selection-and-cancel
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line

# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'

# copy to Wayland clipboard
if -b 'command -v wl-copy > /dev/null 2>&1' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - | wl-copy"'

# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - | reattach-to-usernamespace pbcopy"'


# ===== buffers ===== #

bind b list-buffers     # list paste buffers
bind p paste-buffer -p  # paste from the top paste buffer
bind P choose-buffer    # choose which buffer to paste from


# ===== Edit/Reload tmux configuration during runtime ===== #

# edit configuration
bind e new-window -n "#{TMUX_CONF}" sh -c '${EDITOR:-nvim} "$TMUX_CONF" && "$TMUX_PROGRAM" ${TMUX_SOCKET:+-S "$TMUX_SOCKET"} source "$TMUX_CONF" \; display "$TMUX_CONF sourced"'

# reload configuration
bind r run '"$TMUX_PROGRAM" ${TMUX_SOCKET:+-S "$TMUX_SOCKET"} source "$TMUX_CONF"' \; display "#{TMUX_CONF} sourced"


# ===== 8< ===== #

%if #{==:#{TMUX_PROGRAM},}
  run 'TMUX_PROGRAM="$(LSOF=$(PATH="$PATH:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin" command -v lsof); $LSOF -b -w -a -d txt -p #{pid} -Fn 2>/dev/null | perl -n -e "if (s/^n((?:.(?!dylib$|so$))+)$/\1/g && s/(?:\s+\([^\s]+?\))?$//g) { print; exit } } exit 1; {" || readlink "/proc/#{pid}/exe" 2>/dev/null || printf tmux)"; "$TMUX_PROGRAM" -S #{socket_path} set-environment -g TMUX_PROGRAM "$TMUX_PROGRAM"'
%endif

%if #{==:#{TMUX_SOCKET},}
  run '"$TMUX_PROGRAM" -S #{socket_path} set-environment -g TMUX_SOCKET "#{socket_path}"'
%endif

%if #{==:#{TMUX_CONF},}
  run '"$TMUX_PROGRAM" set-environment -g TMUX_CONF $(for conf in "$HOME/.tmux.conf" "$XDG_CONFIG_HOME/tmux/tmux.conf" "$HOME/.config/tmux/tmux.conf"; do [ -f "$conf" ] && printf "%s" "$conf" && break; done)'
%endif

# ===== Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf) ===== #
run '~/.tmux/plugins/tpm/tpm'

#================================================================#
